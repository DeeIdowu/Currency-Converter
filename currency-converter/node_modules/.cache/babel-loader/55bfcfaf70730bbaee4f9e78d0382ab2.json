{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/CurrencyConverter/currency-converter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CurrencyRow from './components/CurrencyRow';\nimport './App.css';\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n  _s();\n\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState([]);\n  const [toCurrency, setToCurrency] = useState([]);\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL).then(res => res.json()).then(data => {\n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    });\n  }, []);\n  useEffect(() => {}, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(true);\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value);\n    setAmountInFromCurrency(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to the Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: fromCurrency,\n      onChangeCurrency: e => setFromCurrency(e.target.value),\n      onChangeAmount: handleFromAmountChange,\n      amount: fromAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"equals\",\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrencyRow, {\n      currencyOptions: currencyOptions,\n      selectedCurrency: toCurrency,\n      onChangeCurrency: e => setToCurrency(e.target.value),\n      onChangeAmount: handleToAmountChange,\n      amount: toAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MLV0ueoIiyc5a7wgBx31wyIlJuo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deeidowu/Desktop/2020-Coding-Content/Portfolio2020/ReactProjects/CurrencyConverter/currency-converter/src/App.js"],"names":["React","useEffect","useState","CurrencyRow","BASE_URL","App","currencyOptions","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","amount","setAmount","amountInFromCurrency","setAmountInFromCurrency","toAmount","fromAmount","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","handleFromAmountChange","e","target","value","handleToAmountChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAC,wCAAf;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,IAAD,CAAhE;AAEF,MAAIgB,QAAJ,EAAcC,UAAd;;AACA,MAAGH,oBAAH,EAAwB;AACtBG,IAAAA,UAAU,GAAGL,MAAb;AACAI,IAAAA,QAAQ,GAAGJ,MAAM,GAAGF,YAApB;AACD,GAHD,MAGM;AACJM,IAAAA,QAAQ,GAAGJ,MAAX;AACAK,IAAAA,UAAU,GAAGL,MAAM,GAAGF,YAAtB;AACD;;AAECX,EAAAA,SAAS,CAAC,MAAI;AACVmB,IAAAA,KAAK,CAAChB,QAAD,CAAL,CACGiB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAG;AACX,YAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,EAAwB,CAAxB,CAAtB;AACArB,MAAAA,kBAAkB,CAAC,CAACiB,IAAI,CAACK,IAAN,EAAY,GAAGH,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,KAAjB,CAAf,CAAD,CAAlB;AACAnB,MAAAA,eAAe,CAACe,IAAI,CAACK,IAAN,CAAf;AACAlB,MAAAA,aAAa,CAACc,aAAD,CAAb;AACAZ,MAAAA,eAAe,CAACW,IAAI,CAACI,KAAL,CAAWH,aAAX,CAAD,CAAf;AACD,KARH;AASH,GAVQ,EAUN,EAVM,CAAT;AAYAxB,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEN,CAACO,YAAD,EAAeE,UAAf,CAFM,CAAT;;AAIA,WAASoB,sBAAT,CAAgCC,CAAhC,EAAkC;AAChChB,IAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAhB,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AAED,WAASiB,oBAAT,CAA8BH,CAA9B,EAAgC;AAC9BhB,IAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAhB,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AACE,MAAA,eAAe,EAAIX,eADrB;AAEE,MAAA,gBAAgB,EAAEE,YAFpB;AAGE,MAAA,gBAAgB,EAAEuB,CAAC,IAAGtB,eAAe,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHvC;AAIE,MAAA,cAAc,EAAIH,sBAJpB;AAKE,MAAA,MAAM,EAAGX;AALX;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,WAAD;AACE,MAAA,eAAe,EAAIb,eADrB;AAEE,MAAA,gBAAgB,EAAEI,UAFpB;AAGE,MAAA,gBAAgB,EAAEqB,CAAC,IAAGpB,aAAa,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHrC;AAIE,MAAA,cAAc,EAAIC,oBAJpB;AAKE,MAAA,MAAM,EAAGhB;AALX;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAhEQb,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport CurrencyRow from './components/CurrencyRow';\nimport './App.css';\n\nconst BASE_URL=\"https://api.exchangeratesapi.io/latest\"\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState([])\n  const [toCurrency, setToCurrency] = useState([])\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\nlet toAmount, fromAmount\nif(amountInFromCurrency){\n  fromAmount = amount\n  toAmount = amount * exchangeRate\n} else{\n  toAmount = amount\n  fromAmount = amount / exchangeRate\n}\n\n  useEffect(()=>{\n      fetch(BASE_URL)\n        .then(res => res.json())\n        .then(data =>{\n          const firstCurrency = Object.keys(data.rates)[0]\n          setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n          setFromCurrency(data.base)\n          setToCurrency(firstCurrency)\n          setExchangeRate(data.rates[firstCurrency])\n        })\n  }, [])\n\n  useEffect(()=>{\n\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <div className=\"App\">\n        <h1>Welcome to the Currency Converter</h1>\n        <CurrencyRow\n          currencyOptions = {currencyOptions}\n          selectedCurrency={fromCurrency}\n          onChangeCurrency={e=> setFromCurrency(e.target.value)}\n          onChangeAmount = {handleFromAmountChange}\n          amount ={fromAmount}\n        />\n        <div className=\"equals\">=</div>\n        <CurrencyRow\n          currencyOptions = {currencyOptions}\n          selectedCurrency={toCurrency}\n          onChangeCurrency={e=> setToCurrency(e.target.value)}\n          onChangeAmount = {handleToAmountChange}\n          amount ={toAmount}\n\n        />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}