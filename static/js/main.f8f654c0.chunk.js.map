{"version":3,"sources":["components/CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAuBeA,MApBd,SAAqBC,GAAQ,IAErBC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEL,OACI,gCACI,uBAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,wBAAQI,MAAON,EAAkBO,SAAUN,EAA3C,SACCF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,YCZvBC,G,MAAS,0CAwEAC,MAtEf,WAAgB,IAQZC,EAAUC,EARC,EACiCC,mBAAS,IAD1C,mBACNf,EADM,KACWgB,EADX,OAE2BD,mBAAS,IAFpC,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,mBAAS,IAHhC,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNX,EALM,KAKEmB,EALF,OAM2CR,oBAAS,GANpD,mBAMNS,EANM,KAMgBC,EANhB,KA+Cb,OAtCCD,GACDV,EAAaV,EACbS,EAAWT,EAASiB,IAEpBR,EAAWT,EACXU,EAAaV,EAASiB,GAGtBK,qBAAU,WACNC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAEhC,IAEDN,qBAAU,WACU,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAE5C,CAACF,EAAcE,IAahB,sBAAKb,UAAU,MAAf,UACI,oEACA,cAAC,EAAD,CACEN,gBAAmBA,EACnBC,iBAAkBgB,EAClBf,iBAAkB,SAAAmC,GAAC,OAAGnB,EAAgBmB,EAAEC,OAAO/B,QAC/CJ,eAjBR,SAAgCkC,GAC9Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,IAgBlBrB,OAASU,IAEX,qBAAKR,UAAU,SAAf,eACA,cAAC,EAAD,CACEN,gBAAmBA,EACnBC,iBAAkBkB,EAClBjB,iBAAkB,SAAAmC,GAAC,OAAGjB,EAAciB,EAAEC,OAAO/B,QAC7CJ,eApBR,SAA8BkC,GAC5Bd,EAAUc,EAAEC,OAAO/B,OACnBkB,GAAwB,IAmBlBrB,OAASS,QC/DnB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f8f654c0.chunk.js","sourcesContent":["import React from 'react'\n\n\n function CurrencyRow(props) {\n     const{\n         currencyOptions,\n         selectedCurrency,\n         onChangeCurrency,\n         onChangeAmount,\n         amount\n     } = props\n    return (\n        <div>\n            <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\n            <select value={selectedCurrency} onChange={onChangeCurrency}>\n            {currencyOptions.map(option =>(\n                <option key={option} value={option}>{option}</option>\n            ))}   \n            </select>\n        </div>\n    )\n}\n\nexport default CurrencyRow;\n","import React, {useEffect, useState} from 'react';\nimport CurrencyRow from './components/CurrencyRow';\nimport './App.css';\n\nconst BASE_URL=\"https://api.exchangeratesapi.io/latest\"\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState([])\n  const [toCurrency, setToCurrency] = useState([])\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\nlet toAmount, fromAmount\nif(amountInFromCurrency){\n  fromAmount = amount\n  toAmount = amount * exchangeRate\n} else{\n  toAmount = amount\n  fromAmount = amount / exchangeRate\n}\n\n  useEffect(()=>{\n      fetch(BASE_URL)\n        .then(res => res.json())\n        .then(data =>{\n          const firstCurrency = Object.keys(data.rates)[0]\n          setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n          setFromCurrency(data.base)\n          setToCurrency(firstCurrency)\n          setExchangeRate(data.rates[firstCurrency])\n        })\n  }, [])\n\n    useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  }, [fromCurrency, toCurrency])\n\n  function handleFromAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e){\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <div className=\"App\">\n        <h1>Welcome to the Currency Converter:</h1>\n        <CurrencyRow\n          currencyOptions = {currencyOptions}\n          selectedCurrency={fromCurrency}\n          onChangeCurrency={e=> setFromCurrency(e.target.value)}\n          onChangeAmount = {handleFromAmountChange}\n          amount ={fromAmount}\n        />\n        <div className=\"equals\">=</div>\n        <CurrencyRow\n          currencyOptions = {currencyOptions}\n          selectedCurrency={toCurrency}\n          onChangeCurrency={e=> setToCurrency(e.target.value)}\n          onChangeAmount = {handleToAmountChange}\n          amount ={toAmount}\n\n        />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}